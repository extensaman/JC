Найти и пересказать:
-------------------------------------------------------------------------------------------------
1 Зачем нужна анотация @FunctionalInterface?

Это директива для компилятора, для того, чтобы он проверил действительно ли является объявляемый 
интерфейс функциональным, т.е. опредеено ли в нем не более одного абстрактного метода.
-------------------------------------------------------------------------------------------------
2 Как задать ссылки на методы в функциональном интерфейсе?

Ссылка на статический метод создается посредством указания имени метода, 
которому предшествует имя класса, с использованием следующего общего синтаксиса:
имя_класса::имя_метода

Ссылка на метод экземпляра конкретного объекта создается посредством следующего базового синтаксиса:
ссылка_на_объект::имя_метода
-------------------------------------------------------------------------------------------------
3 Как задать ссылки на конструкторы в функциональном интерфейсе?

Аналогично тому, как создаются ссылки на методы, можно создавать также ссылки на конструкторы. 
Используемый при этом синтаксис имеет следующую общую форму:

имя класса::new

Данную ссылку можно присвоить ссылке на любой функциональный интерфейс, 
который определяет метод, совместимый с конструктором.
-------------------------------------------------------------------------------------------------
4 Для чего используются конвеерные методы в Stream API?

Конвеерные методы используются для получения промежуточного результата стрима для его последующей
дальнейшей обработки конвеерным методом или формирования результата стрима с помощью
терминального метода. Результатом конвеерного метода является другой stream.
-------------------------------------------------------------------------------------------------
5 Для чего используются терминальные методы в Stream API?

Для формирования результата стрима на основании исходного состояния стрима или результата
выполнения предшествующего конвеерного метода. Результатом терминального метода является
другой объект, такой как коллекция, примитивы, объекты, Optional и т.д.
-------------------------------------------------------------------------------------------------
