package home.chapter06inheritance.task00;

/**
* Занятие №04
* Раздел "Наследование".
* Задача №04.
* 
* 1 Реализовать класс "Юридическое лицо".
* Поля класса:
* - процент налогооблажения выручки за год (например 20 %, целое число от 0 до 100)
* - выручка за год (например 200 рублей, целое число)
* Методы:
* - установить выручку за год
* - посчитать выручка за год после налогооблажения (например 160рублей, вещественный тип, пример расчета: 200 - (200/100)20 = 160рублей)
* - посчитать значение налога за год ( (200/100)20 = 40 рублей)
* Параметры конструктора:
* - процент налогооблажения выручки за год
* 
* Реализовать класс "OAO", который будет унаследован от "Юридическое лицо".
* Дополнительные поля класса "OAO":
* - процент дорожного налога выручки за год (например 5 %, целое число от 0 до 100)
* Переопределенные методы:
* - посчитать выручка за год после налогооблажения (например 160рублей, вещественный тип, пример расчета: 200 - (200/100)20 - (200/100)5) = 150рублей)
* - посчитать значение налога за год ( (200/100)20 + (200/100)5 = 50 рублей)
* Параметры конструктора:
* - процент налогооблажения выручки за год
* - процент дорожного налога выручки за год
* родительский контструктор "Юридическое лицо" использовать в конструкторе "OAO" через ключевое слово super (например:
* public OAO((int tax, int roadTax) {
* super(tax);
* this.roadTax = tax;
* }
* )
* в классе "Бугалтерия" реализовать один метод :
* - посчитать баланс фирмы, который выводит на экран
* 1 Вывести на экран значение выручка за год
* 2 Вывести на экран значение налога за год
* 3 Вывести на экран значение выручка за год после налогооблажения
* и main:
* 1 Создать две фирмы: одна "ЮР", вторая "ОАО" и установить налоги через конструктор.
* 2 установить прибыль за год в каждую фирму.
* 3 посчитать баланс фирмы
* 
* @author Yusikau Aliaksandr
* @version 1.0
*/

public class Runner {

	public static void main(String[] args) {

		Entity firm01 = new Entity (20);
		firm01.setProceeds(1_000);
		Bookkeeping.printEntityBalance(firm01);
		
		JSC firm02 = new JSC (20, 10);
		firm02.setProceeds(1_000_000);
		Bookkeeping.printEntityBalance(firm02);

	}

}
